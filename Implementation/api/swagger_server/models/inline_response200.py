# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.path import Path  # noqa: F401,E501
from swagger_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, status: int=None, total_results: int=None, paths: List[Path]=None):  # noqa: E501
        """InlineResponse200 - a model defined in Swagger

        :param status: The status of this InlineResponse200.  # noqa: E501
        :type status: int
        :param total_results: The total_results of this InlineResponse200.  # noqa: E501
        :type total_results: int
        :param paths: The paths of this InlineResponse200.  # noqa: E501
        :type paths: List[Path]
        """
        self.swagger_types = {
            'status': int,
            'total_results': int,
            'paths': List[Path]
        }

        self.attribute_map = {
            'status': 'status',
            'total_results': 'totalResults',
            'paths': 'paths'
        }

        self._status = status
        self._total_results = total_results
        self._paths = paths

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> int:
        """Gets the status of this InlineResponse200.

        Http status of the request  # noqa: E501

        :return: The status of this InlineResponse200.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this InlineResponse200.

        Http status of the request  # noqa: E501

        :param status: The status of this InlineResponse200.
        :type status: int
        """

        self._status = status

    @property
    def total_results(self) -> int:
        """Gets the total_results of this InlineResponse200.

        Total number of returned items  # noqa: E501

        :return: The total_results of this InlineResponse200.
        :rtype: int
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results: int):
        """Sets the total_results of this InlineResponse200.

        Total number of returned items  # noqa: E501

        :param total_results: The total_results of this InlineResponse200.
        :type total_results: int
        """

        self._total_results = total_results

    @property
    def paths(self) -> List[Path]:
        """Gets the paths of this InlineResponse200.


        :return: The paths of this InlineResponse200.
        :rtype: List[Path]
        """
        return self._paths

    @paths.setter
    def paths(self, paths: List[Path]):
        """Sets the paths of this InlineResponse200.


        :param paths: The paths of this InlineResponse200.
        :type paths: List[Path]
        """

        self._paths = paths
